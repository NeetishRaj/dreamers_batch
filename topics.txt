Part 13: Event bubbling Vs Capture and Event Delegation.
#######################################################


Event Bubbling Vs Capture

    Bubbling syntax: default
    addEventListener(event-type, callback function, useCapture = false)

    Capture sytax:
    addEventListener(event-type, callback function, useCapture = true)



Event Delegation

    It's a way to utilize Event bubbling and 
    prevent ourselves from attaching eventlisteners
    to all child items.

    We basically delegate the task of event handling to the parent.

    Example:  Parent and child can be any HTML element
        <parent>
            <child></child>
            <child></child>
            <child></child>
        </parent>

        parent.onclick = function(event) {
            // use event.target property to access the child items
        }




Type Casting
    Explicit Type casting
        String


    Implicit Type Casting
        Examples:
            addition with string



Important Topics
################


Q. Is event bubbling a default behaviour ?
A. Yes


Q. How to stop event bubbling for some div element in a website?
A. We can use event.stopPropagation() function.


Q. Please share examples of Implicit type casting in JavaScript.
A.

    1. String addition with other types
        "abc" + 45 = "abc45"
        true + '' = 'true'

    2. Boolean implicit type casting inside if()
        if(null) -> if(Boolean(null)) -> if(false)
