JS Part 5: Closures, callbacks
#############################

Closures

Callbacks






Important Notes
###############

Q.  What are Closures in JS and why are they used?
A. Closure is a JS tricks where in order to make something(variable, function) private we wrap it inside     another function.
    
    Example: 
    function closureFunction() {
        let somePrivateVar = 0;

        return  function () {
            // using somePrivateVar
        }
    }

    //Using the closure function
    const main_function = closureFunction();

    main_function();
    main_function();

Q. Is 'func' a higher order function?

    function print() {
        console.log("Hello world");
    }

    function func() {
        print();
    }

A: NO



Q. Is 'func' a higher order function?

    function print() {
        console.log("Hello world");
    }

    function func() {
        return function () {
            print();
        }
    }

A: YES, because func is returning a function.


Q. Does 'func' have a valid callback?

    function print() {
        console.log("Hello world");
    }

    function func(callback) {
        print();
    }

A: NO, because we not invoking the callback in func



Q. Does 'func' have a valid callback?

    function print() {
        console.log("Hello world");
    }

    function func(callback) {
        print();
        callback();
    }

A: YES